# --------------------------------------------------------------------------------------------------
# Database connection settings. Note that there is embedded Ruby code here, which is correctly
# supported by Rails. You can "test" this file with the command `erb config/database.yml` and
# check the parsed output. Also, note that this file reads the ENV variables set at both .env files
# at the root directory of the project. Will fork properly for both virtualized and native cases.
# --------------------------------------------------------------------------------------------------

<%
require "dotenv"
Dotenv.load(File.join("..", ".env"), File.join("..", ".secrets.env"))
%>

default: &default
  adapter: postgresql
  encoding: unicode
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>

development:
  <<: *default
  url: "postgresql://tomaramosuandes:tomaramosuandes@<%= ENV.fetch('POSTGRES_HOST') { 'localhost' } %>:<%= ENV.fetch('POSTGRES_PORT') %>/tomaramosuandes_development"
  min_messages: notice

test:
  <<: *default
  url: "postgresql://tomaramosuandes:tomaramosuandes@<%= ENV.fetch('POSTGRES_HOST') { 'localhost' } %>:<%= ENV.fetch('POSTGRES_PORT') %>/tomaramosuandes_test"
  min_messages: log

production:
  # WIP
  <<: *default
  url: "postgresql://tomaramosuandes:<%= ENV.fetch('TOMARAMOSUANDES_DATABASE_PASSWORD') { 'todo' } %>@<%= ENV.fetch('POSTGRES_HOST') { 'localhost' } %>:<%= ENV.fetch('POSTGRES_PORT') %>/tomaramosuandes_production"
  min_messages: warning
